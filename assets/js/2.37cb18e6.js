(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{146:function(e,t,v){e.exports=v.p+"assets/img/workflow.4ad4ebac.png"},147:function(e,t,v){e.exports=v.p+"assets/img/workflow2.1a43043b.png"},151:function(e,t,v){"use strict";v.r(t);var s=v(6),_=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"igg-通用项目前后端配合流程说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#igg-通用项目前后端配合流程说明"}},[e._v("#")]),e._v(" IGG 通用项目前后端配合流程说明")]),e._v(" "),s("h2",{attrs:{id:"流程介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程介绍"}},[e._v("#")]),e._v(" 流程介绍")]),e._v(" "),s("p",[e._v("在新的工作流中，分为前后端不分离模式和前后端分离模式。")]),e._v(" "),s("ul",[s("li",[e._v("不分离模式：前端人员在"),s("strong",[e._v("项目仓库中")]),e._v("开发活动，开发完成后告知后端人员开发目录路径，后端人员执行 "),s("code",[e._v("yarn build:dev")]),e._v(" 生成模板文件，复制对应模板文件作为程序 html 模板进行开发，若前端模板文件结构有调整，需要前后端人员配合完成程序模板调整，直至开发完成部署上线;")]),e._v(" "),s("li",[e._v("分离模式：前端人员在"),s("strong",[e._v("项目仓库中")]),e._v("开发活动，后端提供接口给前端使用，开发完成后进行联调，直至完成开发部署上线。此开发流程中后端人员不需要关注模板文件;")])]),e._v(" "),s("p",[e._v("与旧工作流程相比，新流程主要有以下几点不同：")]),e._v(" "),s("ol",[s("li",[e._v("前端工程源码存放于项目仓库;")]),e._v(" "),s("li",[e._v("静态资源由发布系统编译并发布;")]),e._v(" "),s("li",[e._v("交付给后端的模板由后端人员编译得到;")]),e._v(" "),s("li",[e._v("后端人员在本地开发时静态资源读取的是本地文件;")])]),e._v(" "),s("p",[e._v("相对旧工作流程，新工作流有以下优点：")]),e._v(" "),s("ol",[s("li",[e._v("在前后端分离模式中，后端人员完全不需要关注模板和静态资源;")]),e._v(" "),s("li",[e._v("自动更新客户端缓存, 文件名哈希值根据文件内容生成;")]),e._v(" "),s("li",[e._v("多语言图片嵌入优化;")])]),e._v(" "),s("h2",{attrs:{id:"必备工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#必备工具"}},[e._v("#")]),e._v(" 必备工具")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("nodejs")]),e._v(" "),s("p",[e._v("推荐版本："),s("code",[e._v("v12.22.1")]),e._v("。"),s("br"),e._v("\n下载地址："),s("a",{attrs:{href:"https://nodejs.org/dist/latest-v12.x/node-v12.22.1-x64.msi",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://nodejs.org/dist/latest-v12.x/node-v12.22.1-x64.msi"),s("OutboundLink")],1),e._v("。"),s("br"),e._v("\n安装后设置 npm 源为淘宝镜像可以加快安装速度：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm config set registry https://registry.npm.taobao.org\n")])])]),s("p",[e._v("另外，需要配置 "),s("code",[e._v("@igg")]),e._v(" 前缀的包的 "),s("code",[e._v("registry")]),e._v(" 为内网私有库地址：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm config set @igg:registry http://fe.skyunion.net:8081\n")])])]),s("p",[e._v("之后，在非前端后分离项目中，后端人员将使用 "),s("code",[e._v("node")]),e._v(" 编译前端工程以得到项目模板文件和本地开发需要的静态资源文件。")])]),e._v(" "),s("li",[s("p",[e._v("包管理工具 Yarn")]),e._v(" "),s("p",[e._v("推荐版本："),s("code",[e._v("latest")]),e._v("。"),s("br"),e._v("\n安装方法："),s("br"),e._v("\n在安装完 "),s("code",[e._v("nodejs")]),e._v(" 后，在命令行输入：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i -g yarn\n")])])])]),e._v(" "),s("li",[s("p",[e._v("IGG Cli (仅前端开发人员需要安装)"),s("br"),e._v("\nIGG Cli 用于创建非前后端分离的项目， 项目地址： "),s("a",{attrs:{href:"http://fe.skyunion.net:8081/-/web/detail/@igg/cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://fe.skyunion.net:8081/-/web/detail/@igg/cli"),s("OutboundLink")],1),e._v("。"),s("br"),e._v("\n安装方法："),s("br"),e._v("\n全局安装, 安装完成后命令行会有一个名为 "),s("code",[e._v("igg")]),e._v(" 的全局命令：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i -g @igg/cli\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Vue Cli 的 IGG 活动插件（仅前端开发人员需要安装）"),s("br"),e._v("\n此插件用于创建前后端分离的项目, 项目地址： "),s("a",{attrs:{href:"http://fe.skyunion.net:8081/-/web/detail/@igg/vue-cli-plugin-igg-event",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://fe.skyunion.net:8081/-/web/detail/@igg/vue-cli-plugin-igg-event"),s("OutboundLink")],1),s("br"),e._v("\n使用方法：")]),e._v(" "),s("ol",[s("li",[e._v("安装 "),s("code",[e._v("Vue Cli")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i -g @vue/cli\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("使用 "),s("code",[e._v("Vue Cli")]),e._v(" 创建项目:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue create demo-event\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("项目创建完成后，再添加此插件:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue add @igg/vue-cli-plugin-igg-event\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"php-sdk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-sdk"}},[e._v("#")]),e._v(" PHP SDK")]),e._v(" "),s("h2",{attrs:{id:"php-sdk-包地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-sdk-包地址"}},[e._v("#")]),e._v(" PHP SDK 包地址")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://git.skyunion.net/frontend/frontend-sdk",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://git.skyunion.net/frontend/frontend-sdk"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"php-sdk-基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-sdk-基本用法"}},[e._v("#")]),e._v(" PHP SDK 基本用法")]),e._v(" "),s("p",[e._v("更详细的用法可以去 git 仓库查看 readme 文档")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("use IGG\\Frontend\\Template;\n\n// 本地开发时，需要声明一个常量，这个时候会直接加载本地文件\ndefine('ASSETS_DEV', TRUE);\n\n// 站点根目录绝对路径\n$rootPath = dirname(dirname(__DIR__));\n\n// 传入活动前端资源映射assets.json所在目录，存放在站点根目录/assets-maps下，由前端组脚本生成\nTemplate::instance($rootPath, array('events/2021/test-event/', 'events/2021/test/'));\n\n// 获得一个无语言区分的文件公网地址\nstaticFile('events/2021/test-event/css/mobile/index.css');\n\n// 获得英文资源文件公网地址\nstaticFile('events/2021/test-event/img/1.png', 'eng');\n\n// 假如资源是多语言的，但是未传语言，则默认取配置第一张图片做为地址返回\nstaticFile('events/2021/test-event/img/1.png');\n\n// 方法默认直接输出，不需要输出则使用第三个参数传0\nstaticFile('events/2021/test-event/img/1.png', '', 0);\n")])])]),s("h2",{attrs:{id:"目录规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录规范"}},[e._v("#")]),e._v(" 目录规范")]),e._v(" "),s("h3",{attrs:{id:"前端工程源码存放目录规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端工程源码存放目录规范"}},[e._v("#")]),e._v(" 前端工程源码存放目录规范")]),e._v(" "),s("p",[e._v("当前端工程存放于项目仓库时，应按以下目录规则存放：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("├── frontend                            【进版本库】前端工程源码\n|  └── events                           活动目录\n|     └── 2021                          活动年份\n|        └── demo-event                 活动名\n|           └── dist                    打包目录\n|           └── jenkins.config.json     jenkins配置文件, 由脚手架自动生成\n|           └── package.json            项目配置文件\n└── demo-project                        非活动项目\n|  └── dist\n|  └── jenkins.config.json\n|  └── package.json\n└── auto-assets                         【不进版本库】用于本地开发的静态资源目录，由前端脚手架生成, 细节见后面操作流程（如站点web root指向在代码根目录)\n└── assets-maps                         【进版本库】静态资源文件名映射JSON文件，由前端脚手架生成, 细节见后面操作流程\n└── public                              * 如果web root为public时，项目根目录会存在这个文件夹\n|  └── auto-assets                      * 【不进版本库】功能同根目录的auto-assets/, 如站点web root是在public目录下，则这个目录会自动生成到此处\n")])])]),s("ul",[s("li",[e._v("案例 1：SUS 游戏开发一个圣诞节活动"),s("br"),e._v("\n前端源码应存放于 "),s("code",[e._v("sus.igg.com")]),e._v(" 仓库中的 "),s("code",[e._v("frontend/events/2021/xmas")]),e._v(" 目录下。")]),e._v(" "),s("li",[e._v("案例 2：开发 TP 游戏官网首页"),s("br"),e._v("\n前端源码应存放于 "),s("code",[e._v("dut.igg.com")]),e._v(" 仓库中的 "),s("code",[e._v("frontend/homepage")]),e._v(" 目录下。")])]),e._v(" "),s("h3",{attrs:{id:"静态资源发布目录规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态资源发布目录规范"}},[e._v("#")]),e._v(" 静态资源发布目录规范")]),e._v(" "),s("p",[e._v("静态资源发布在 "),s("code",[e._v("//statics.igg.com/assets/")]),e._v(" 路径下。")]),e._v(" "),s("h4",{attrs:{id:"上传方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传方式"}},[e._v("#")]),e._v(" 上传方式")]),e._v(" "),s("p",[e._v("上传方式有以下两种：")]),e._v(" "),s("ol",[s("li",[e._v("项目仓库内的前端工程源码，合并到 "),s("code",[e._v("pre")]),e._v(" 或者 "),s("code",[e._v("master")]),e._v(" 分支时，由发布系统编译并上传;")]),e._v(" "),s("li",[e._v("提交到 "),s("code",[e._v("gitlab")]),e._v(" 仓库 "),s("code",[e._v("project-assets")]),e._v(" 的文件，会由发布系统全量发布到对应路径下;")])]),e._v(" "),s("h4",{attrs:{id:"路径规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径规则"}},[e._v("#")]),e._v(" 路径规则")]),e._v(" "),s("p",[e._v("静态资源路径应遵循以下规则：")]),e._v(" "),s("ol",[s("li",[e._v("各游戏（项目）以游戏名(项目名)（优先取二级域名）建立在 "),s("code",[e._v("assets")]),e._v(" 下， 例如 "),s("code",[e._v("sus")]),e._v(" 的路径为: "),s("code",[e._v("/assets/sus")]),e._v("， 运营支撑系统为 "),s("code",[e._v("/assets/support")]),e._v(", 公共库文件为 "),s("code",[e._v("/assets/lib")]),e._v("。")]),e._v(" "),s("li",[e._v("若项目为游戏，为区分以上两种上传方式，需要在游戏名下级建立 "),s("code",[e._v("dist")]),e._v(" 和 "),s("code",[e._v("res")]),e._v(" 目录，其中，通过项目仓库编译的资源目录为"),s("code",[e._v("dist")]),e._v(" , 通过 "),s("code",[e._v("project-assets")]),e._v(" 仓库上传的资源目录为 "),s("code",[e._v("res")]),e._v("。")]),e._v(" "),s("li",[e._v("活动需要按年份分类, 存放于 "),s("code",[e._v("events")]),e._v(" 目录中, 如: "),s("code",[e._v("/assets/sus/res/events/2021/demo-event")]),e._v("。")]),e._v(" "),s("li",[e._v("目录及文件名为小写英文、数字及半角英文 "),s("code",[e._v("-")]),e._v("。")]),e._v(" "),s("li",[e._v("目录名如为二个或以上单词用单横线-连接, 如 "),s("code",[e._v("/assets/sus/events/2021/test-event")]),e._v("。")])]),e._v(" "),s("p",[e._v("以下是目录结构示例：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("├── assets                                  根路径\n|  └── lib                                  一级目录以项目名为目录名\n|     └── jquery\n|     └── vue\n|  └── lo                                   一级目录\n|     └── dist                              dist 为项目仓库内编译的静态资源\n|           └── demo-project                非活动项目\n|               └── css                     css\n|               └── img                     img\n|               └── js                      js\n|           └── events                      活动项目\n|               └── 2021                    活动年份\n|                   └── demo-event          活动，以活动名为目录名\n|                       └── css\n|                       └── js\n|                       └── img\n|     └── res                               res 为通过 project-assets 仓库上传的资源目录\n|           └── demo-project                非活动项目\n|               └── css\n|               └── img\n|               └── js\n|           └── events                      活动项目\n|               └── 2021                    活动年份\n|                   └── demo-event          活动，以活动名为目录名\n|                       └── css\n|                       └── js\n|                       └── img\n\n")])])]),s("p",[s("strong",[e._v("注意")]),e._v("： 从属于游戏的活动或者非活动资源，需要放在 "),s("code",[e._v("dist")]),e._v(" 或者 "),s("code",[e._v("res")]),e._v(" 路径下，以区分编译资源和直接上传的资源。"),s("br"),e._v("\n资源应在哪个路径下，一个简单的判断规则是，如果你的资源是集成在活动仓库内，应在 "),s("code",[e._v("dist")]),e._v(" 目录下，如果在 "),s("code",[e._v("project-assets")]),e._v(" 仓库内，则应在 "),s("code",[e._v("res")]),e._v(" 目录下。")]),e._v(" "),s("h2",{attrs:{id:"开发流程细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发流程细节"}},[e._v("#")]),e._v(" 开发流程细节")]),e._v(" "),s("h3",{attrs:{id:"前后端不分离模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端不分离模式"}},[e._v("#")]),e._v(" 前后端不分离模式")]),e._v(" "),s("h4",{attrs:{id:"流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[e._v("#")]),e._v(" 流程图")]),e._v(" "),s("p",[s("img",{attrs:{src:v(146),alt:"workflow"}})]),e._v(" "),s("h4",{attrs:{id:"前端开发人员流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端开发人员流程"}},[e._v("#")]),e._v(" 前端开发人员流程")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("选择开发分支"),s("br"),e._v("\n在与后端开发人员约定好的分支进行开发。")])]),e._v(" "),s("li",[s("p",[e._v("建立项目工程"),s("br"),e._v("\n通过 "),s("code",[e._v("IGG Cli")]),e._v(" 的 "),s("code",[e._v("create")]),e._v(" 命令创建项目模板, 工程目录应遵循前述 "),s("em",[e._v("前端工程源码存放目录规范")]),e._v(", 在开发目录下的命令行输入：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" igg create demo-event\n")])])]),s("p",[e._v("之后，项目脚手架将通过问答进行项目配置，具体配置及解释如下：")]),e._v(" "),s("ol",[s("li",[e._v("活动名称（eventName）"),s("br"),e._v("\n输入项目的活动名称，需要为英文、数字和英文连接符 "),s("code",[e._v("-")]),e._v(" , 此项必填。")]),e._v(" "),s("li",[e._v("输入发布路径（publicPath）"),s("br"),e._v("\n输入项目静态资源发布路径，即按以上静态资源目录规范，本项目的静态资源应发布在何路径下，之后，Cli 工具将会替换项目模板相关变量。"),s("br"),e._v(" "),s("strong",[e._v("注意：")]),e._v(" 路径名中需要包含 "),s("code",[e._v("dist")]),e._v("。")]),e._v(" "),s("li",[e._v("选择 web 路径（webPath）"),s("br"),e._v("\nweb 路径有两种，一种为项目根目录，一种为项目 "),s("code",[e._v("public")]),e._v(" 目录，各项目不同，请咨询该项目后端开发人员。"),s("br"),e._v("\n此配置将写入打包生成的静态资源映射文件中(即 "),s("code",[e._v("assets-map")]),e._v(" 目录对应的 "),s("code",[e._v("assets.json")]),e._v(" 文件)。")]),e._v(" "),s("li",[e._v("选择需要的模块（modules）"),s("br"),e._v("\n目前，有四个预置公共库可供选择，"),s("code",[e._v("jQuery")]),e._v(", "),s("code",[e._v("vue")]),e._v(", "),s("code",[e._v("axios")]),e._v(" 和 "),s("code",[e._v("vant")]),e._v("。")]),e._v(" "),s("li",[e._v("活动平台类型/主题（eventType）"),s("br"),e._v("\n此配置有四个选项， 请根据项目情况选择：\n"),s("ul",[s("li",[e._v("PC")]),e._v(" "),s("li",[e._v("Mobile")]),e._v(" "),s("li",[e._v("PC & Mobile")]),e._v(" "),s("li",[e._v("自定义名称")])])]),e._v(" "),s("li",[e._v("输入主题名（themeName）"),s("br"),e._v("\n主题目录名，当上一配置选择"),s("code",[e._v("自定义名称")]),e._v("时，需要填写此配置。")])])]),e._v(" "),s("li",[s("p",[e._v("前端开发阶段"),s("br"),e._v("\n前端开发人员进行页面制作及表现类功能的 JS 编写。")])]),e._v(" "),s("li",[s("p",[e._v("项目交付"),s("br"),e._v("\n当完成前端开发后且提交代码后，将前端源码路径告知后端开发人员即完成交付。")])])]),e._v(" "),s("h4",{attrs:{id:"后端开发人员流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端开发人员流程"}},[e._v("#")]),e._v(" 后端开发人员流程")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("生成本地静态资源文件及模板文件"),s("br"),e._v("\n在前端开发完成得到前端源代码目录路径时，在前端源代码目录下，运行：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 1. 安装项目依赖包\nyarn\n\n// 2. 生成静态资源\nyarn build:dev\n")])])]),s("p",[e._v("此时，会生成两类文件，分别是：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("静态资源文件及模板文件"),s("br"),e._v("\n静态资源文件用于本地开发，生成在仓库根目录的 "),s("code",[e._v("/auto-assets/")]),e._v(" 路径下(web root 为 public 时，这个目录会生成到/public/auto-assets/),\n如前端源码目录为 "),s("code",[e._v("frontend/events/2021/demo-event")]),e._v(" , 则此项目的本地静态资源文件在 "),s("code",[e._v("/auto-assets/events/2021/demo-event")]),e._v(" 中。\n模板文件位于 "),s("code",[e._v("/auto-assets/events/2021/demo-event/pages")]),e._v(" 文件夹中, 该文件夹内有 "),s("code",[e._v(".html")]),e._v(" 和对应的 "),s("code",[e._v(".phtml")]),e._v(" 文件，请将 "),s("code",[e._v(".phtml")]),e._v(" 文件拷贝至活动正式的模板目录中。")])]),e._v(" "),s("li",[s("p",[e._v("静态资源映射文件"),s("br"),e._v("\n因生成的静态资源是根据文件内容生成哈希值在文件名上，所以当文件内容变化时，文件名也会产生变化，因此，在每次前端工程编译时，会根据静态资源的文件名， 在仓库根目录的 "),s("code",[e._v("/assets-map/")]),e._v(" 路径下生成一份静态资源映射文件。"),s("br"),e._v("\n如前端源码目录为 "),s("code",[e._v("frontend/events/2021/demo-event")]),e._v(" , 则此项目的映射文件在 "),s("code",[e._v("/assets-map/events/2021/demo-event")]),e._v(" 中。"),s("br"),e._v("\n在模板文件中，插入的是文件的键名，如"),s("code",[e._v("<?php staticFile('events/2021/test-event/css/mobile/index.css') ?>")]),e._v(", "),s("code",[e._v("PHP SDK")]),e._v(" 根据键名及环境，在静态资源映射文件中找到对应的静态资源并插入。"),s("br"),e._v("\n文件内容示例如下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' {\n   "publicPath": "//statics.igg.com/assets/sus/dist/events/2021/test-event/", // 该项目发布路径\n   "webPath": "/", // 本项目仓库的web路径\n   "assets": {\n     "events/2021/test-event/css/mobile/index.css": "css/mobile/index.7839da06.css", // 文件映射\n     "events/2021/test-event/img/1.png": { "chs": "img/1--chs.cdbc815d.png", "eng": "img/1--eng.cdbc815d.png" } // 多语言图片的文件映射\n   }\n }\n')])])])])])]),e._v(" "),s("li",[s("p",[e._v("获得模板文件\n在对应目录找到 index.phtml 文件，复制到程序自己的模板目录内进行开发")])]),e._v(" "),s("li",[s("p",[e._v("后端开发阶段\n业务开发...")])]),e._v(" "),s("li",[s("p",[e._v("模板变更\n假如在开发过程中需求变动、逻辑优化等原因，模板发生变动，在前端提交代码后，开发可以拉取最新的前端代码，然后重新执行步骤 1。与前端同学一起将 dom 变动改到程序模板上。")])]),e._v(" "),s("li",[s("p",[e._v("发布上线")])])]),e._v(" "),s("h3",{attrs:{id:"前后端分离模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离模式"}},[e._v("#")]),e._v(" 前后端分离模式")]),e._v(" "),s("h4",{attrs:{id:"流程图-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程图-2"}},[e._v("#")]),e._v(" 流程图")]),e._v(" "),s("p",[s("img",{attrs:{src:v(147),alt:"workflow"}})]),e._v(" "),s("h4",{attrs:{id:"前端开发人员流程-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端开发人员流程-2"}},[e._v("#")]),e._v(" 前端开发人员流程")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("选择开发分支"),s("br"),e._v("\n请按与后端开发人员约定好的分支进行开发。")])]),e._v(" "),s("li",[s("p",[e._v("接口定义"),s("br"),e._v("\n应对页面功能进行分析，并配合后端开发人员页面用到的接口及字段进行定义，最终由后端开发人员提供接口文档给前端。")])]),e._v(" "),s("li",[s("p",[e._v("数据 MOCK"),s("br"),e._v("\n根据接口文档，在 "),s("a",{attrs:{href:"http://fe.skyunion.net:8082/",target:"_blank",rel:"noopener noreferrer"}},[e._v("YAPI"),s("OutboundLink")],1),e._v(" 上做数据 MOCK。")])]),e._v(" "),s("li",[s("p",[e._v("建立项目工程"),s("br"),e._v("\n通过 "),s("code",[e._v("Vue Cli")]),e._v(" 及 "),s("code",[e._v("vue-cli-plugin-igg-event")]),e._v(" 创建工程, 工程目录应遵循"),s("code",[e._v("前端工程源码存放目录规范")]),e._v("：")]),e._v(" "),s("ol",[s("li",[e._v("通过 "),s("code",[e._v("Vue Cli")]),e._v(" 创建项目")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue create demo-event\n")])])]),s("ol",[s("li",[e._v("添加 "),s("code",[e._v("vue-cli-plugin-igg-event")]),e._v(" 插件")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue add @igg/vue-cli-plugin-igg-event\n")])])]),s("p",[e._v("此时，插件通过问答进行项目配置，配置及解释与上述非前后端分离开发流程中使用 "),s("code",[e._v("IGG Cli")]),e._v(" 创建项目中的问答一致的部分此处不再赘述。"),s("br"),e._v("\n不同的是，此流程需要额外配置模板的存放路径，即编译后的模板文件应存放于哪个目录下。")])]),e._v(" "),s("li",[s("p",[e._v("前端开发阶段"),s("br"),e._v("\n进行页面制作及功能开发。")])]),e._v(" "),s("li",[s("p",[e._v("联调阶段"),s("br"),e._v("\n将接口域名设置为后端提供的地址，进行联调。")])])]),e._v(" "),s("h4",{attrs:{id:"后端开发人员流程-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端开发人员流程-2"}},[e._v("#")]),e._v(" 后端开发人员流程")]),e._v(" "),s("ol",[s("li",[e._v("接口定义"),s("br"),e._v("\n与前端开发人员配合分析页面功能及定义接口及字段，并提供接口文档。")]),e._v(" "),s("li",[e._v("后端开发阶段")]),e._v(" "),s("li",[e._v("联调阶段"),s("br"),e._v("\n与前端开发人员配合进行接口联调。")])]),e._v(" "),s("h3",{attrs:{id:"项目发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目发布"}},[e._v("#")]),e._v(" 项目发布")]),e._v(" "),s("p",[e._v("将开发分支合并到预发布环境(分支名必须为 pre)或者生产环境(分支名必须为 master)并执行手动或者自动发布, 发布系统检测到前端工程文件发生变化，将根据当前分支，如为 "),s("code",[e._v("pre")]),e._v(" 则执行 "),s("code",[e._v("npm build:pre")]),e._v(" 命令，如为 "),s("code",[e._v("master")]),e._v(" 分支则执行"),s("code",[e._v("npm build")]),e._v(" 命令，之后将编译后的静态资源文件上传到 "),s("code",[e._v("statics.igg.com")]),e._v(" , 完成发布。")]),e._v(" "),s("h3",{attrs:{id:"gitignore-的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore-的修改"}},[e._v("#")]),e._v(" .gitignore 的修改")]),e._v(" "),s("p",[e._v("项目的.gitignore 文件需增加以下几条，以排除前端项目中不需要提交的文件：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("node_modules/\ndist/\nauto-assets/\n")])])]),s("p",[e._v("请严格按以上格式拷入.gitignore 文件")]),e._v(" "),s("h3",{attrs:{id:"前后端不分离模式下的项目修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端不分离模式下的项目修改"}},[e._v("#")]),e._v(" 前后端不分离模式下的项目修改")]),e._v(" "),s("p",[e._v("当项目发布上线需要修改时，原则上，谁开发的代码应由谁修改：")]),e._v(" "),s("ul",[s("li",[e._v("对于前端开发人员"),s("br"),e._v("\n在前端工程内修改完毕，如涉及页面结构修改，因模板文件内添加了 PHP 代码及 JS 代码， 大多数情况下，不能再使用编译生成的模板文件，应在原开发过的模板中修改。")]),e._v(" "),s("li",[e._v("对于后端开发人员"),s("br"),e._v("\n在前端开发人员提交代码变更后，在前端开发目录下执行一次 "),s("code",[e._v("build:dev")]),e._v(" 命令以生成新的本地静态资源文件。")])]),e._v(" "),s("h2",{attrs:{id:"多语言图片处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多语言图片处理"}},[e._v("#")]),e._v(" 多语言图片处理")]),e._v(" "),s("p",[e._v("当页面中需要根据页面语言插入对应语言的图片时，应将图片命名为"),s("code",[e._v("图片名--语言编码")]),e._v("格式, 如： "),s("code",[e._v("img--eng.jpg")]),e._v("、"),s("code",[e._v("img--chs.jpg")]),e._v(", PHP SDK 会根据当前页面语言找到对应图片并插入。"),s("br"),e._v("\n语言编码为三位，可参考"),s("a",{attrs:{href:"https://wiki.skyunion.net/index.php?title=%E5%9B%BD%E5%AE%B6/%E5%9C%B0%E5%8C%BA%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86%E5%AF%B9%E7%85%A7",target:"_blank",rel:"noopener noreferrer"}},[e._v("此链接"),s("OutboundLink")],1),e._v("中的第三点"),s("em",[e._v("语言编码")]),e._v("。"),s("br"),e._v("\n本地开发时，可选择插入任意一张图片, 项目脚手架会编译 "),s("code",[e._v("src/assets/img")]),e._v(" 文件夹内的所有图片。")]),e._v(" "),s("h2",{attrs:{id:"客户端缓存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端缓存管理"}},[e._v("#")]),e._v(" 客户端缓存管理")]),e._v(" "),s("p",[e._v("编译后的文件根据文件内容带 8 位 hash 值, 再由页面模板自动更新文件名以清除客户端缓存。")]),e._v(" "),s("h2",{attrs:{id:"垃圾文件清理策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾文件清理策略"}},[e._v("#")]),e._v(" 垃圾文件清理策略")]),e._v(" "),s("p",[e._v("编译生成的静态资源文件名带哈希值，当文件内容变化时产生的文件名也不同，当新文件发布上线后，旧文件就没有用了。因判断此类文件数量不会太多，且清理会比较麻烦，因此垃圾文件的清理策略为："),s("strong",[e._v("不清理")]),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"jenkins-前端部署流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-前端部署流程"}},[e._v("#")]),e._v(" jenkins 前端部署流程")]),e._v(" "),s("ol",[s("li",[e._v("签出代码;")]),e._v(" "),s("li",[e._v("读取 git 变更记录，如果 frontend 目录有变更记录，比如存在 frontend/events/xxx 下的目录变更，则进入有变更的 events/xxx 目录，执行 npm build，如果为 preproduction 环境则为 npm build:pre;")]),e._v(" "),s("li",[e._v("读取 jenkins.config.json 中的 publicPath 并上传到 s3 此路径中;")])]),e._v(" "),s("h2",{attrs:{id:"对-production-preproduction-发布的-git-分支的规范调整"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对-production-preproduction-发布的-git-分支的规范调整"}},[e._v("#")]),e._v(" 对 production, preproduction 发布的 git 分支的规范调整")]),e._v(" "),s("p",[e._v("使用 jenkins 做上述流程的前端资源打包，则为了能够通过 git 记录对比出变更的具体目录，需要限制 production 和 preproductin 只允许发布指定的分支或者 tag（如果环境存在跨分支发布，则对比文件变更可能不准确）。")])])}),[],!1,null,null,null);t.default=_.exports}}]);